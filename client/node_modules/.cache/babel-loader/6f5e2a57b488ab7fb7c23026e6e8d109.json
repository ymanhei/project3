{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\SChan20\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\SChan20\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\SChan20\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\SChan20\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\SChan20\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\SChan20\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\SChan20\\\\project3\\\\client\\\\src\\\\pages\\\\Welltops.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Plot from 'react-plotly.js';\n\nvar Welltops = /*#__PURE__*/function (_Component) {\n  _inherits(Welltops, _Component);\n\n  function Welltops() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Welltops);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Welltops)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      welltops: [],\n      welltopsinc: [],\n      allwelltops: [],\n      allsources: [],\n      allsurfaces: [],\n      surfacearr: [],\n      countarr: [],\n      welltopid: 0,\n      wellname: \"\",\n      surface: \"\",\n      depth: 0,\n      remarks: \"\"\n    };\n\n    _this.getallsurfaces = function () {\n      API.finddistinctsurfaces().then(function (res) {\n        return _this.setState({\n          allsurfaces: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(\"this.state.allsurfaces:    \" + _this.state.allsurfaces.length);\n    };\n\n    _this.returnsurfacearr = function (data) {\n      var arr = [];\n      data.forEach(function (d) {\n        arr.push(d._id);\n      });\n      console.log(arr);\n      return arr;\n    };\n\n    _this.returncountarr = function (data) {\n      var arr = [];\n      data.forEach(function (d) {\n        arr.push(d.count);\n      });\n      console.log(arr);\n      return arr;\n    };\n\n    _this.populatesurfacearr = function () {\n      API.finddistinctsurfaces().then(function (res) {\n        return _this.setState({\n          surfacearr: _this.returnsurfacearr(res.data),\n          countarr: _this.returncountarr(res.data)\n        });\n      });\n    };\n\n    _this.loadWelltops = function () {\n      API.getWelltops().then(function (res) {\n        return _this.setState({\n          welltops: res.data,\n          welltopid: 0,\n          wellname: \"\",\n          surface: \"\",\n          depth: 0,\n          remarks: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      API.getWelltopsinc().then(function (res) {\n        return _this.setState({\n          welltopsinc: res.data,\n          welltopid: 0,\n          wellname: \"\",\n          surface: \"\",\n          depth: 0,\n          remarks: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.getall = function () {\n      API.getallwelltops().then(function (res) {\n        return _this.setState({\n          allwelltops: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      API.getallsources().then(function (res) {\n        return _this.setState({\n          allsources: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteWelltop = function (id) {\n      API.deleteWelltop(id).then(function (res) {\n        return _this.loadWelltops();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.state.allsources.forEach(function (welltop) {\n        var _this2 = this;\n\n        API.updateWelltop(welltop.welltopid, {\n          depth: parseInt(welltop.depth)\n        }).then(function (res) {\n          return _this2.loadWelltops();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      });\n\n      API.saveWelltop(_this.state.welltops).then(function (res) {\n        return _this.loadWelltops();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      alert(\"Fixed!\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Welltops, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.forceUpdate();\n      this.loadWelltops();\n      this.getall();\n      this.getallsurfaces();\n      this.populatesurfacearr();\n    }\n  }, {\n    key: \"render\",\n\n    /*  showpie = () => {\n       var data = [{\n         values: [19, 26, 55],\n         labels: [\"Residential\", \"Non-Residential\", \"Utility\"],\n         type: \"pie\"\n       }];\n       \n       var layout = {\n         height: 400,\n         width: 500\n       };\n       \n       Plotly.newPlot(\"myDiv\", data, layout);\n       console.log(\"Plotly!\")\n     }; */\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"myDiv\",\n        className: \"position-absolute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        className: \"border border-secondary rounded\",\n        data: [{\n          values: this.state.countarr,\n          labels: this.state.surfacearr,\n          type: 'pie'\n        }],\n        layout: {\n          width: 500,\n          height: 400,\n          title: 'Welltop Surfaces'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(Jumbotron, {\n        className: \"position-relative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"border border-secondary rounded p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Missing Welltops\"), this.state.welltops.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.welltops.map(function (welltop) {\n        return React.createElement(ListItem, {\n          key: welltop._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/welltops/\" + welltop._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"Well Name: \", welltop.wellname, \" Surface: \", welltop.surface, \" Depth: \", welltop.depth, \"m\")));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"No Results to Display\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Welltops need attention!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Total number of welltops: \", this.state.allwelltops.length), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Total number of sources: \", this.state.allsources.length)), React.createElement(\"div\", {\n        className: \"border border-secondary rounded p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Incorrect Depth\"), this.state.welltopsinc.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.state.welltopsinc.map(function (welltopinc) {\n        return React.createElement(ListItem, {\n          key: welltopinc.welltopid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/welltopsinc/wid/\" + welltopinc.welltopid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"Well Name: \", welltopinc.wellname, \" Surface: \", welltopinc.surface, \" Depth: \", welltopinc.depth, \"m\")));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"No Results to Display\"))), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(FormBtn, {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"One Click Fix!\"))));\n    }\n  }]);\n\n  return Welltops;\n}(Component);\n\nexport default Welltops;","map":{"version":3,"sources":["C:/Users/SChan20/project3/client/src/pages/Welltops.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Plot","Welltops","state","welltops","welltopsinc","allwelltops","allsources","allsurfaces","surfacearr","countarr","welltopid","wellname","surface","depth","remarks","getallsurfaces","finddistinctsurfaces","then","res","setState","data","catch","err","console","log","length","returnsurfacearr","arr","forEach","d","push","_id","returncountarr","count","populatesurfacearr","loadWelltops","getWelltops","getWelltopsinc","getall","getallwelltops","getallsources","deleteWelltop","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","welltop","updateWelltop","parseInt","saveWelltop","alert","forceUpdate","values","labels","type","width","height","title","map","welltopinc"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Plot from 'react-plotly.js';\n\nclass Welltops extends Component {\n  \n  state = {\n    welltops: [],\n    welltopsinc: [],\n    allwelltops: [],\n    allsources: [],\n    allsurfaces:[],\n    surfacearr:[],\n    countarr:[],\n    welltopid: 0,\n    wellname: \"\",\n    surface: \"\",\n    depth: 0,\n    remarks: \"\"\n    \n  };\n\n  componentDidMount() {\n    this.forceUpdate();\n    this.loadWelltops();\n    this.getall();\n    this.getallsurfaces();\n    this.populatesurfacearr();\n  }\n\n  getallsurfaces = () => {\n    API.finddistinctsurfaces()\n    .then(res =>\n      this.setState({ allsurfaces: res.data})\n    )\n    .catch(err => console.log(err));\n    console.log(\"this.state.allsurfaces:    \" + this.state.allsurfaces.length);\n  };\n\n  returnsurfacearr = (data) => {\n    var arr = [];\n    data.forEach(function (d) {\n      arr.push(d._id);\n    })\n    console.log(arr);\n   return arr\n   };  \n\n\n   returncountarr = (data) => {\n    var arr = [];\n    data.forEach(function (d) {\n      arr.push(d.count);\n    })\n    console.log(arr);\n   return arr\n   }; \n\n    populatesurfacearr = () => {\n    \n   API.finddistinctsurfaces()\n   .then(res => \n    this.setState({surfacearr: this.returnsurfacearr(res.data),countarr: this.returncountarr(res.data)}) \n      )\n  };  \n\n  loadWelltops = () => {\n    API.getWelltops()\n      .then(res =>\n        this.setState({ welltops: res.data, welltopid: 0, wellname: \"\", surface: \"\", depth: 0, remarks: \"\" })\n      )\n      .catch(err => console.log(err));\n\n      API.getWelltopsinc()\n      .then(res =>\n        this.setState({ welltopsinc: res.data, welltopid: 0, wellname: \"\", surface: \"\", depth: 0, remarks: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  getall = () => {\n    API.getallwelltops()\n      .then(res =>\n        this.setState({ allwelltops: res.data})\n      )\n      .catch(err => console.log(err));\n\n      API.getallsources()\n      .then(res =>\n        this.setState({ allsources: res.data})\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteWelltop = id => {\n    API.deleteWelltop(id)\n      .then(res => this.loadWelltops())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    this.state.allsources.forEach(function(welltop) {\n    \n    API.updateWelltop(welltop.welltopid,{depth: parseInt(welltop.depth)})\n    .then(res => this.loadWelltops())\n    .catch(err => console.log(err));\n  })\n\n  API.saveWelltop(this.state.welltops)\n    .then(res => this.loadWelltops())\n    .catch(err => console.log(err));\n\n    alert(\"Fixed!\");\n  };\n\n /*  showpie = () => {\n    var data = [{\n      values: [19, 26, 55],\n      labels: [\"Residential\", \"Non-Residential\", \"Utility\"],\n      type: \"pie\"\n    }];\n    \n    var layout = {\n      height: 400,\n      width: 500\n    };\n    \n    Plotly.newPlot(\"myDiv\", data, layout);\n    console.log(\"Plotly!\")\n  }; */\n\n \n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n          <div id='myDiv' className=\"position-absolute\">\n          <Plot className=\"border border-secondary rounded\"\n        data={[\n          {\n            values: this.state.countarr,\n            labels: this.state.surfacearr,\n            type: 'pie'\n          },\n        ]}\n        layout={ {width: 500, height: 400, title: 'Welltop Surfaces'} }\n      />\n          \n          </div>\n            <Jumbotron className=\"position-relative\">\n \n            </Jumbotron>\n            <div className=\"border border-secondary rounded p-3\">\n            <h3>Missing Welltops</h3>\n            {this.state.welltops.length ? (\n              <List>\n                {this.state.welltops.map(welltop => (\n                  <ListItem key={welltop._id}>\n                    <Link to={\"/welltops/\" + welltop._id}>\n                      <strong>\n                       Well Name: {welltop.wellname} Surface: {welltop.surface} Depth: {welltop.depth}m\n                      </strong>\n                    </Link>\n                    \n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n            </div>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Welltops need attention!</h1>\n              <p>Total number of welltops: {this.state.allwelltops.length}</p>\n              <p>Total number of sources: {this.state.allsources.length}</p>\n            </Jumbotron>\n           \n            <div className=\"border border-secondary rounded p-3\">\n            <h3>Incorrect Depth</h3>\n            {this.state.welltopsinc.length ? (\n              <List>\n                {this.state.welltopsinc.map(welltopinc => (\n                  <ListItem key={welltopinc.welltopid}>\n                    <Link to={\"/welltopsinc/wid/\" + welltopinc.welltopid}>\n                      <strong>\n                       Well Name: {welltopinc.wellname} Surface: {welltopinc.surface} Depth: {welltopinc.depth}m\n                      </strong>\n                    </Link>\n                    \n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n            </div>\n          </Col>\n          <form>\n              <FormBtn\n                \n                onClick={this.handleFormSubmit}\n              >\n                One Click Fix!\n              </FormBtn>\n            </form>\n        </Row>\n      </Container>\n      \n    );\n  }\n}\n\nexport default Welltops;\n"]},"metadata":{},"sourceType":"module"}